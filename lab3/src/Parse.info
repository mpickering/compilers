-----------------------------------------------------------------------------
Info file generated by Happy Version 1.18.9 from Parse.y
-----------------------------------------------------------------------------

state 63 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseFile -> program                        (0)
	program -> decls BEGIN stmts END DOT               (1)
	decls ->                                           (2)
	decls -> decl decls                                (3)
	decl -> VAR name_list COLON typexp SEMI            (4)
	name_list -> name                                  (5)
	name_list -> name COMMA name_list                  (6)
	typexp -> INTEGER                                  (7)
	typexp -> BOOLEAN                                  (8)
	typexp -> ARRAY NUMBER OF typexp                   (9)
	stmts -> stmt_list                                 (10)
	stmt_list -> stmt                                  (11)
	stmt_list -> stmt SEMI stmt_list                   (12)
	stmt ->                                            (13)
	stmt -> name ASSIGN expr                           (14)
	stmt -> PRINT expr                                 (15)
	stmt -> NEWLINE                                    (16)
	stmt -> IF expr THEN stmts END                     (17)
	stmt -> IF expr THEN stmts ELSE stmts END          (18)
	stmt -> IF expr THEN stmts elsifs END              (19)
	stmt -> WHILE expr DO stmts END                    (20)
	elsifs ->                                          (21)
	elsifs -> ELSIF expr THEN stmts elsifs             (22)
	elsifs -> ELSIF expr THEN stmts ELSE stmts         (23)
	expr -> simple                                     (24)
	expr -> expr RELOP simple                          (25)
	simple -> term                                     (26)
	simple -> simple ADDOP term                        (27)
	simple -> simple MINUS term                        (28)
	term -> factor                                     (29)
	term -> term MULOP factor                          (30)
	factor -> variable                                 (31)
	factor -> NUMBER                                   (32)
	factor -> MONOP factor                             (33)
	factor -> MINUS factor                             (34)
	factor -> LPAR expr RPAR                           (35)
	variable -> name                                   (36)
	variable -> variable SUB expr BUS                  (37)
	name -> IDENT                                      (38)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	IDENT          { IDENT $$ }
	MONOP          { MONOP $$ }
	MULOP          { MULOP $$ }
	ADDOP          { ADDOP $$ }
	RELOP          { RELOP $$ }
	NUMBER         { NUMBER $$ }
	SEMI           { SEMI }
	DOT            { DOT }
	COLON          { COLON }
	LPAR           { LPAR }
	RPAR           { RPAR }
	COMMA          { COMMA }
	MINUS          { MINUS }
	ASSIGN         { ASSIGN }
	OF             { OF }
	BEGIN          { BEGIN }
	DO             { DO }
	ELSE           { ELSE }
	END            { END }
	IF             { IF }
	ELSIF          { ELSIF }
	THEN           { THEN }
	WHILE          { WHILE }
	PRINT          { PRINT }
	NEWLINE        { NEWLINE }
	SUB            { SUB }
	BUS            { BUS }
	VAR            { VAR }
	INTEGER        { INTEGER }
	BOOLEAN        { BOOLEAN }
	ARRAY          { ARRAY }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseFile rule  0
	program         rule  1
	decls           rules 2, 3
	decl            rule  4
	name_list       rules 5, 6
	typexp          rules 7, 8, 9
	stmts           rule  10
	stmt_list       rules 11, 12
	stmt            rules 13, 14, 15, 16, 17, 18, 19, 20
	elsifs          rules 21, 22, 23
	expr            rules 24, 25
	simple          rules 26, 27, 28
	term            rules 29, 30
	factor          rules 31, 32, 33, 34, 35
	variable        rules 36, 37
	name            rule  38

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	BEGIN          reduce using rule 2
	VAR            shift, and enter state 4

	program        goto state 5
	decls          goto state 2
	decl           goto state 3

State 1


	VAR            shift, and enter state 4

	decls          goto state 2
	decl           goto state 3

State 2

	program -> decls . BEGIN stmts END DOT              (rule 1)

	BEGIN          shift, and enter state 10


State 3

	decls -> decl . decls                               (rule 3)

	BEGIN          reduce using rule 2
	VAR            shift, and enter state 4

	decls          goto state 9
	decl           goto state 3

State 4

	decl -> VAR . name_list COLON typexp SEMI           (rule 4)

	IDENT          shift, and enter state 8

	name_list      goto state 6
	name           goto state 7

State 5

	%start_parseFile -> program .                       (rule 0)

	%eof           accept


State 6

	decl -> VAR name_list . COLON typexp SEMI           (rule 4)

	COLON          shift, and enter state 20


State 7

	name_list -> name .                                 (rule 5)
	name_list -> name . COMMA name_list                 (rule 6)

	COLON          reduce using rule 5
	COMMA          shift, and enter state 19


State 8

	name -> IDENT .                                     (rule 38)

	MULOP          reduce using rule 38
	ADDOP          reduce using rule 38
	RELOP          reduce using rule 38
	SEMI           reduce using rule 38
	COLON          reduce using rule 38
	RPAR           reduce using rule 38
	COMMA          reduce using rule 38
	MINUS          reduce using rule 38
	ASSIGN         reduce using rule 38
	DO             reduce using rule 38
	ELSE           reduce using rule 38
	END            reduce using rule 38
	ELSIF          reduce using rule 38
	THEN           reduce using rule 38
	SUB            reduce using rule 38
	BUS            reduce using rule 38


State 9

	decls -> decl decls .                               (rule 3)

	BEGIN          reduce using rule 3


State 10

	program -> decls BEGIN . stmts END DOT              (rule 1)

	IDENT          shift, and enter state 8
	SEMI           reduce using rule 13
	END            reduce using rule 13
	IF             shift, and enter state 15
	WHILE          shift, and enter state 16
	PRINT          shift, and enter state 17
	NEWLINE        shift, and enter state 18

	stmts          goto state 11
	stmt_list      goto state 12
	stmt           goto state 13
	name           goto state 14

State 11

	program -> decls BEGIN stmts . END DOT              (rule 1)

	END            shift, and enter state 40


State 12

	stmts -> stmt_list .                                (rule 10)

	ELSE           reduce using rule 10
	END            reduce using rule 10
	ELSIF          reduce using rule 10


State 13

	stmt_list -> stmt .                                 (rule 11)
	stmt_list -> stmt . SEMI stmt_list                  (rule 12)

	SEMI           shift, and enter state 39
	ELSE           reduce using rule 11
	END            reduce using rule 11
	ELSIF          reduce using rule 11


State 14

	stmt -> name . ASSIGN expr                          (rule 14)

	ASSIGN         shift, and enter state 38


State 15

	stmt -> IF . expr THEN stmts END                    (rule 17)
	stmt -> IF . expr THEN stmts ELSE stmts END         (rule 18)
	stmt -> IF . expr THEN stmts elsifs END             (rule 19)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	expr           goto state 37
	simple         goto state 27
	term           goto state 28
	factor         goto state 29
	variable       goto state 30
	name           goto state 31

State 16

	stmt -> WHILE . expr DO stmts END                   (rule 20)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	expr           goto state 36
	simple         goto state 27
	term           goto state 28
	factor         goto state 29
	variable       goto state 30
	name           goto state 31

State 17

	stmt -> PRINT . expr                                (rule 15)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	expr           goto state 26
	simple         goto state 27
	term           goto state 28
	factor         goto state 29
	variable       goto state 30
	name           goto state 31

State 18

	stmt -> NEWLINE .                                   (rule 16)

	SEMI           reduce using rule 16
	ELSE           reduce using rule 16
	END            reduce using rule 16
	ELSIF          reduce using rule 16


State 19

	name_list -> name COMMA . name_list                 (rule 6)

	IDENT          shift, and enter state 8

	name_list      goto state 25
	name           goto state 7

State 20

	decl -> VAR name_list COLON . typexp SEMI           (rule 4)

	INTEGER        shift, and enter state 22
	BOOLEAN        shift, and enter state 23
	ARRAY          shift, and enter state 24

	typexp         goto state 21

State 21

	decl -> VAR name_list COLON typexp . SEMI           (rule 4)

	SEMI           shift, and enter state 55


State 22

	typexp -> INTEGER .                                 (rule 7)

	SEMI           reduce using rule 7


State 23

	typexp -> BOOLEAN .                                 (rule 8)

	SEMI           reduce using rule 8


State 24

	typexp -> ARRAY . NUMBER OF typexp                  (rule 9)

	NUMBER         shift, and enter state 54


State 25

	name_list -> name COMMA name_list .                 (rule 6)

	COLON          reduce using rule 6


State 26

	stmt -> PRINT expr .                                (rule 15)
	expr -> expr . RELOP simple                         (rule 25)

	RELOP          shift, and enter state 44
	SEMI           reduce using rule 15
	ELSE           reduce using rule 15
	END            reduce using rule 15
	ELSIF          reduce using rule 15


State 27

	expr -> simple .                                    (rule 24)
	simple -> simple . ADDOP term                       (rule 27)
	simple -> simple . MINUS term                       (rule 28)

	ADDOP          shift, and enter state 52
	RELOP          reduce using rule 24
	SEMI           reduce using rule 24
	RPAR           reduce using rule 24
	MINUS          shift, and enter state 53
	DO             reduce using rule 24
	ELSE           reduce using rule 24
	END            reduce using rule 24
	ELSIF          reduce using rule 24
	THEN           reduce using rule 24
	BUS            reduce using rule 24


State 28

	simple -> term .                                    (rule 26)
	term -> term . MULOP factor                         (rule 30)

	MULOP          shift, and enter state 51
	ADDOP          reduce using rule 26
	RELOP          reduce using rule 26
	SEMI           reduce using rule 26
	RPAR           reduce using rule 26
	MINUS          reduce using rule 26
	DO             reduce using rule 26
	ELSE           reduce using rule 26
	END            reduce using rule 26
	ELSIF          reduce using rule 26
	THEN           reduce using rule 26
	BUS            reduce using rule 26


State 29

	term -> factor .                                    (rule 29)

	MULOP          reduce using rule 29
	ADDOP          reduce using rule 29
	RELOP          reduce using rule 29
	SEMI           reduce using rule 29
	RPAR           reduce using rule 29
	MINUS          reduce using rule 29
	DO             reduce using rule 29
	ELSE           reduce using rule 29
	END            reduce using rule 29
	ELSIF          reduce using rule 29
	THEN           reduce using rule 29
	BUS            reduce using rule 29


State 30

	factor -> variable .                                (rule 31)
	variable -> variable . SUB expr BUS                 (rule 37)

	MULOP          reduce using rule 31
	ADDOP          reduce using rule 31
	RELOP          reduce using rule 31
	SEMI           reduce using rule 31
	RPAR           reduce using rule 31
	MINUS          reduce using rule 31
	DO             reduce using rule 31
	ELSE           reduce using rule 31
	END            reduce using rule 31
	ELSIF          reduce using rule 31
	THEN           reduce using rule 31
	SUB            shift, and enter state 50
	BUS            reduce using rule 31


State 31

	variable -> name .                                  (rule 36)

	MULOP          reduce using rule 36
	ADDOP          reduce using rule 36
	RELOP          reduce using rule 36
	SEMI           reduce using rule 36
	RPAR           reduce using rule 36
	MINUS          reduce using rule 36
	DO             reduce using rule 36
	ELSE           reduce using rule 36
	END            reduce using rule 36
	ELSIF          reduce using rule 36
	THEN           reduce using rule 36
	SUB            reduce using rule 36
	BUS            reduce using rule 36


State 32

	factor -> MONOP . factor                            (rule 33)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	factor         goto state 49
	variable       goto state 30
	name           goto state 31

State 33

	factor -> NUMBER .                                  (rule 32)

	MULOP          reduce using rule 32
	ADDOP          reduce using rule 32
	RELOP          reduce using rule 32
	SEMI           reduce using rule 32
	RPAR           reduce using rule 32
	MINUS          reduce using rule 32
	DO             reduce using rule 32
	ELSE           reduce using rule 32
	END            reduce using rule 32
	ELSIF          reduce using rule 32
	THEN           reduce using rule 32
	BUS            reduce using rule 32


State 34

	factor -> LPAR . expr RPAR                          (rule 35)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	expr           goto state 48
	simple         goto state 27
	term           goto state 28
	factor         goto state 29
	variable       goto state 30
	name           goto state 31

State 35

	factor -> MINUS . factor                            (rule 34)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	factor         goto state 47
	variable       goto state 30
	name           goto state 31

State 36

	stmt -> WHILE expr . DO stmts END                   (rule 20)
	expr -> expr . RELOP simple                         (rule 25)

	RELOP          shift, and enter state 44
	DO             shift, and enter state 46


State 37

	stmt -> IF expr . THEN stmts END                    (rule 17)
	stmt -> IF expr . THEN stmts ELSE stmts END         (rule 18)
	stmt -> IF expr . THEN stmts elsifs END             (rule 19)
	expr -> expr . RELOP simple                         (rule 25)

	RELOP          shift, and enter state 44
	THEN           shift, and enter state 45


State 38

	stmt -> name ASSIGN . expr                          (rule 14)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	expr           goto state 43
	simple         goto state 27
	term           goto state 28
	factor         goto state 29
	variable       goto state 30
	name           goto state 31

State 39

	stmt_list -> stmt SEMI . stmt_list                  (rule 12)

	IDENT          shift, and enter state 8
	SEMI           reduce using rule 13
	ELSE           reduce using rule 13
	END            reduce using rule 13
	IF             shift, and enter state 15
	ELSIF          reduce using rule 13
	WHILE          shift, and enter state 16
	PRINT          shift, and enter state 17
	NEWLINE        shift, and enter state 18

	stmt_list      goto state 42
	stmt           goto state 13
	name           goto state 14

State 40

	program -> decls BEGIN stmts END . DOT              (rule 1)

	DOT            shift, and enter state 41


State 41

	program -> decls BEGIN stmts END DOT .              (rule 1)

	%eof           reduce using rule 1


State 42

	stmt_list -> stmt SEMI stmt_list .                  (rule 12)

	ELSE           reduce using rule 12
	END            reduce using rule 12
	ELSIF          reduce using rule 12


State 43

	stmt -> name ASSIGN expr .                          (rule 14)
	expr -> expr . RELOP simple                         (rule 25)

	RELOP          shift, and enter state 44
	SEMI           reduce using rule 14
	ELSE           reduce using rule 14
	END            reduce using rule 14
	ELSIF          reduce using rule 14


State 44

	expr -> expr RELOP . simple                         (rule 25)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	simple         goto state 64
	term           goto state 28
	factor         goto state 29
	variable       goto state 30
	name           goto state 31

State 45

	stmt -> IF expr THEN . stmts END                    (rule 17)
	stmt -> IF expr THEN . stmts ELSE stmts END         (rule 18)
	stmt -> IF expr THEN . stmts elsifs END             (rule 19)

	IDENT          shift, and enter state 8
	SEMI           reduce using rule 13
	ELSE           reduce using rule 13
	END            reduce using rule 13
	IF             shift, and enter state 15
	ELSIF          reduce using rule 13
	WHILE          shift, and enter state 16
	PRINT          shift, and enter state 17
	NEWLINE        shift, and enter state 18

	stmts          goto state 63
	stmt_list      goto state 12
	stmt           goto state 13
	name           goto state 14

State 46

	stmt -> WHILE expr DO . stmts END                   (rule 20)

	IDENT          shift, and enter state 8
	SEMI           reduce using rule 13
	END            reduce using rule 13
	IF             shift, and enter state 15
	WHILE          shift, and enter state 16
	PRINT          shift, and enter state 17
	NEWLINE        shift, and enter state 18

	stmts          goto state 62
	stmt_list      goto state 12
	stmt           goto state 13
	name           goto state 14

State 47

	factor -> MINUS factor .                            (rule 34)

	MULOP          reduce using rule 34
	ADDOP          reduce using rule 34
	RELOP          reduce using rule 34
	SEMI           reduce using rule 34
	RPAR           reduce using rule 34
	MINUS          reduce using rule 34
	DO             reduce using rule 34
	ELSE           reduce using rule 34
	END            reduce using rule 34
	ELSIF          reduce using rule 34
	THEN           reduce using rule 34
	BUS            reduce using rule 34


State 48

	expr -> expr . RELOP simple                         (rule 25)
	factor -> LPAR expr . RPAR                          (rule 35)

	RELOP          shift, and enter state 44
	RPAR           shift, and enter state 61


State 49

	factor -> MONOP factor .                            (rule 33)

	MULOP          reduce using rule 33
	ADDOP          reduce using rule 33
	RELOP          reduce using rule 33
	SEMI           reduce using rule 33
	RPAR           reduce using rule 33
	MINUS          reduce using rule 33
	DO             reduce using rule 33
	ELSE           reduce using rule 33
	END            reduce using rule 33
	ELSIF          reduce using rule 33
	THEN           reduce using rule 33
	BUS            reduce using rule 33


State 50

	variable -> variable SUB . expr BUS                 (rule 37)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	expr           goto state 60
	simple         goto state 27
	term           goto state 28
	factor         goto state 29
	variable       goto state 30
	name           goto state 31

State 51

	term -> term MULOP . factor                         (rule 30)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	factor         goto state 59
	variable       goto state 30
	name           goto state 31

State 52

	simple -> simple ADDOP . term                       (rule 27)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	term           goto state 58
	factor         goto state 29
	variable       goto state 30
	name           goto state 31

State 53

	simple -> simple MINUS . term                       (rule 28)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	term           goto state 57
	factor         goto state 29
	variable       goto state 30
	name           goto state 31

State 54

	typexp -> ARRAY NUMBER . OF typexp                  (rule 9)

	OF             shift, and enter state 56


State 55

	decl -> VAR name_list COLON typexp SEMI .           (rule 4)

	BEGIN          reduce using rule 4
	VAR            reduce using rule 4


State 56

	typexp -> ARRAY NUMBER OF . typexp                  (rule 9)

	INTEGER        shift, and enter state 22
	BOOLEAN        shift, and enter state 23
	ARRAY          shift, and enter state 24

	typexp         goto state 71

State 57

	simple -> simple MINUS term .                       (rule 28)
	term -> term . MULOP factor                         (rule 30)

	MULOP          shift, and enter state 51
	ADDOP          reduce using rule 28
	RELOP          reduce using rule 28
	SEMI           reduce using rule 28
	RPAR           reduce using rule 28
	MINUS          reduce using rule 28
	DO             reduce using rule 28
	ELSE           reduce using rule 28
	END            reduce using rule 28
	ELSIF          reduce using rule 28
	THEN           reduce using rule 28
	BUS            reduce using rule 28


State 58

	simple -> simple ADDOP term .                       (rule 27)
	term -> term . MULOP factor                         (rule 30)

	MULOP          shift, and enter state 51
	ADDOP          reduce using rule 27
	RELOP          reduce using rule 27
	SEMI           reduce using rule 27
	RPAR           reduce using rule 27
	MINUS          reduce using rule 27
	DO             reduce using rule 27
	ELSE           reduce using rule 27
	END            reduce using rule 27
	ELSIF          reduce using rule 27
	THEN           reduce using rule 27
	BUS            reduce using rule 27


State 59

	term -> term MULOP factor .                         (rule 30)

	MULOP          reduce using rule 30
	ADDOP          reduce using rule 30
	RELOP          reduce using rule 30
	SEMI           reduce using rule 30
	RPAR           reduce using rule 30
	MINUS          reduce using rule 30
	DO             reduce using rule 30
	ELSE           reduce using rule 30
	END            reduce using rule 30
	ELSIF          reduce using rule 30
	THEN           reduce using rule 30
	BUS            reduce using rule 30


State 60

	expr -> expr . RELOP simple                         (rule 25)
	variable -> variable SUB expr . BUS                 (rule 37)

	RELOP          shift, and enter state 44
	BUS            shift, and enter state 70


State 61

	factor -> LPAR expr RPAR .                          (rule 35)

	MULOP          reduce using rule 35
	ADDOP          reduce using rule 35
	RELOP          reduce using rule 35
	SEMI           reduce using rule 35
	RPAR           reduce using rule 35
	MINUS          reduce using rule 35
	DO             reduce using rule 35
	ELSE           reduce using rule 35
	END            reduce using rule 35
	ELSIF          reduce using rule 35
	THEN           reduce using rule 35
	BUS            reduce using rule 35


State 62

	stmt -> WHILE expr DO stmts . END                   (rule 20)

	END            shift, and enter state 69


State 63

	stmt -> IF expr THEN stmts . END                    (rule 17)
	stmt -> IF expr THEN stmts . ELSE stmts END         (rule 18)
	stmt -> IF expr THEN stmts . elsifs END             (rule 19)

	ELSE           shift, and enter state 66
	END            shift, and enter state 67
			(reduce using rule 21)

	ELSIF          shift, and enter state 68

	elsifs         goto state 65

State 64

	expr -> expr RELOP simple .                         (rule 25)
	simple -> simple . ADDOP term                       (rule 27)
	simple -> simple . MINUS term                       (rule 28)

	ADDOP          shift, and enter state 52
	RELOP          reduce using rule 25
	SEMI           reduce using rule 25
	RPAR           reduce using rule 25
	MINUS          shift, and enter state 53
	DO             reduce using rule 25
	ELSE           reduce using rule 25
	END            reduce using rule 25
	ELSIF          reduce using rule 25
	THEN           reduce using rule 25
	BUS            reduce using rule 25


State 65

	stmt -> IF expr THEN stmts elsifs . END             (rule 19)

	END            shift, and enter state 74


State 66

	stmt -> IF expr THEN stmts ELSE . stmts END         (rule 18)

	IDENT          shift, and enter state 8
	SEMI           reduce using rule 13
	END            reduce using rule 13
	IF             shift, and enter state 15
	WHILE          shift, and enter state 16
	PRINT          shift, and enter state 17
	NEWLINE        shift, and enter state 18

	stmts          goto state 73
	stmt_list      goto state 12
	stmt           goto state 13
	name           goto state 14

State 67

	stmt -> IF expr THEN stmts END .                    (rule 17)

	SEMI           reduce using rule 17
	ELSE           reduce using rule 17
	END            reduce using rule 17
	ELSIF          reduce using rule 17


State 68

	elsifs -> ELSIF . expr THEN stmts elsifs            (rule 22)
	elsifs -> ELSIF . expr THEN stmts ELSE stmts        (rule 23)

	IDENT          shift, and enter state 8
	MONOP          shift, and enter state 32
	NUMBER         shift, and enter state 33
	LPAR           shift, and enter state 34
	MINUS          shift, and enter state 35

	expr           goto state 72
	simple         goto state 27
	term           goto state 28
	factor         goto state 29
	variable       goto state 30
	name           goto state 31

State 69

	stmt -> WHILE expr DO stmts END .                   (rule 20)

	SEMI           reduce using rule 20
	ELSE           reduce using rule 20
	END            reduce using rule 20
	ELSIF          reduce using rule 20


State 70

	variable -> variable SUB expr BUS .                 (rule 37)

	MULOP          reduce using rule 37
	ADDOP          reduce using rule 37
	RELOP          reduce using rule 37
	SEMI           reduce using rule 37
	RPAR           reduce using rule 37
	MINUS          reduce using rule 37
	DO             reduce using rule 37
	ELSE           reduce using rule 37
	END            reduce using rule 37
	ELSIF          reduce using rule 37
	THEN           reduce using rule 37
	SUB            reduce using rule 37
	BUS            reduce using rule 37


State 71

	typexp -> ARRAY NUMBER OF typexp .                  (rule 9)

	SEMI           reduce using rule 9


State 72

	elsifs -> ELSIF expr . THEN stmts elsifs            (rule 22)
	elsifs -> ELSIF expr . THEN stmts ELSE stmts        (rule 23)
	expr -> expr . RELOP simple                         (rule 25)

	RELOP          shift, and enter state 44
	THEN           shift, and enter state 76


State 73

	stmt -> IF expr THEN stmts ELSE stmts . END         (rule 18)

	END            shift, and enter state 75


State 74

	stmt -> IF expr THEN stmts elsifs END .             (rule 19)

	SEMI           reduce using rule 19
	ELSE           reduce using rule 19
	END            reduce using rule 19
	ELSIF          reduce using rule 19


State 75

	stmt -> IF expr THEN stmts ELSE stmts END .         (rule 18)

	SEMI           reduce using rule 18
	ELSE           reduce using rule 18
	END            reduce using rule 18
	ELSIF          reduce using rule 18


State 76

	elsifs -> ELSIF expr THEN . stmts elsifs            (rule 22)
	elsifs -> ELSIF expr THEN . stmts ELSE stmts        (rule 23)

	IDENT          shift, and enter state 8
	SEMI           reduce using rule 13
	ELSE           reduce using rule 13
	END            reduce using rule 13
	IF             shift, and enter state 15
	ELSIF          reduce using rule 13
	WHILE          shift, and enter state 16
	PRINT          shift, and enter state 17
	NEWLINE        shift, and enter state 18

	stmts          goto state 77
	stmt_list      goto state 12
	stmt           goto state 13
	name           goto state 14

State 77

	elsifs -> ELSIF expr THEN stmts . elsifs            (rule 22)
	elsifs -> ELSIF expr THEN stmts . ELSE stmts        (rule 23)

	ELSE           shift, and enter state 79
	END            reduce using rule 21
	ELSIF          shift, and enter state 68

	elsifs         goto state 78

State 78

	elsifs -> ELSIF expr THEN stmts elsifs .            (rule 22)

	END            reduce using rule 22


State 79

	elsifs -> ELSIF expr THEN stmts ELSE . stmts        (rule 23)

	IDENT          shift, and enter state 8
	SEMI           reduce using rule 13
	END            reduce using rule 13
	IF             shift, and enter state 15
	WHILE          shift, and enter state 16
	PRINT          shift, and enter state 17
	NEWLINE        shift, and enter state 18

	stmts          goto state 80
	stmt_list      goto state 12
	stmt           goto state 13
	name           goto state 14

State 80

	elsifs -> ELSIF expr THEN stmts ELSE stmts .        (rule 23)

	END            reduce using rule 23


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 39
Number of terminals: 31
Number of non-terminals: 16
Number of states: 81
